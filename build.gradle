plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
//	id 'application'
}

group = 'GMT'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	springfoxVersion = '2.9.2'
//	springCloudVersion = '4.1.1'
	set('springCloudVersion', "2023.0.0-RC1")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
//	}
//}

dependencies {

	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
//	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'io.jsonwebtoken:jjwt:0.9.1'

//	implementation group: 'io.springfox', name: 'springfox-swagger2', version: springfoxVersion
//	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: springfoxVersion

	implementation 'org.glassfish.jersey.core:jersey-client:3.0.3'
	implementation 'org.glassfish.jersey.inject:jersey-hk2:3.0.3'
	implementation 'com.google.code.gson:gson:2.10.1'

	implementation 'net.jodah:expiringmap:0.5.11'

	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
}

test {
	exclude '**/*IT*' // exclude IT
}

tasks.register('allTests', Test) {
	// run all including IT
}

jar {
	manifest {
		attributes(
				'Main-Class': 'Application',
		)
	}
}

tasks.named("jar") {
	enabled = false
}

tasks.named("bootJar") {
	archiveClassifier = ''

}

tasks.register('copyJar', Copy) {
	from project.bootJar
	into "docker/local"
	rename { fileName ->
		fileName.replace("MyGMT-Server-0.0.1-SNAPSHOT.jar", "app.jar")
	}
}

assemble.dependsOn copyJar